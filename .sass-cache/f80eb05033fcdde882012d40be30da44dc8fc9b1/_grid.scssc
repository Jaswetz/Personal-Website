3.2.3 (Media Mark)
2e1b4fc6b400e5bc513e2309a9d4d454e8ce2abc
o:Sass::Tree::RootNode
:@template"Ü// ---------------------------------------------------------------------------
// Imports

@import "compass/utilities/general/clearfix";
@import "compass/css3/box-sizing";

// ---------------------------------------------------------------------------
// Border-Box Sizing

// Apply the border-box sizing model to all elements
// and adjust the grid math appropriately.
@mixin border-box-sizing {
  $border-box-sizing: true;
  * { @include box-sizing(border-box); }
}

// ---------------------------------------------------------------------------
// Container

// Set the width of a container
//
//  $columns  : The number of columns in the Grid Layout.
@mixin set-container-width(
  $columns  : $total-columns
){
  $width: container-outer-width($columns);

  @if $container-style == 'static' {
    width: $width;
  } @else {
    @if $container-style == 'fluid' {
      width: if(unit($width) == '%', $width, auto);
    } @else {
      max-width: $width;
      @if $legacy-support-for-ie6 { _width: $width; }
    }
  }
}

// Set the outer grid-containing element(s).
//
//  $columns  : The number of columns in the container.
@mixin apply-container(
  $columns  : $total-columns
){
  @include pie-clearfix;
  @include set-container-width($columns);
  margin: { left: auto; right: auto; }
  padding: { left: $grid-padding; right: $grid-padding; }
}

// Set one or more layouts on a grid-containing element at any number of media-query breakpoints.
//
// $media-layout-1        : [default:$total-columns] A list of values including -
//                        : One unitless number (representing columns in a layout)
//                        : Two optional lengths (representing min and max-width media-query breakpoints).
// $media-layout-2 ...-10 : [optional] Same as $media-layout-1
@mixin container(
  $media-layout-1   : $total-columns,
  $media-layout-2   : false,
  $media-layout-3   : false,
  $media-layout-4   : false,
  $media-layout-5   : false,
  $media-layout-6   : false,
  $media-layout-7   : false,
  $media-layout-8   : false,
  $media-layout-9   : false,
  $media-layout-10  : false
){
  $media-layouts    : compact($media-layout-2,$media-layout-3,$media-layout-4,$media-layout-5,$media-layout-6,$media-layout-7,$media-layout-8,$media-layout-9,$media-layout-10);

  @if is-default-layout($media-layout-1) {
    @include apply-container();
  } @else {
    @include at-breakpoint($media-layout-1) {
      @include apply-container();
    }
  }

  @each $ml in $media-layouts {
    @if $ml {
      @include at-breakpoint($ml) {
        @include set-container-width;
      }
    }
  }
}

// ---------------------------------------------------------------------------
// Columns

// Create a grid element spanning any number of 'columns' in a grid 'context'.
// $columns : The number of columns to span.
// $context : [optional] The context (columns spanned by parent).
//          : Context is required on any nested elements.
//          : Context MUST NOT be declared on a root element.
// $padding : [optional] Padding applied to the inside of individual grid columns.
//          : Padding is only output if one or two values are specified (e.g. 1em or 10px 20px)
//          : Padding values are applied only on the horizontal axis in from-to order
// $from    : The start direction of your layout (e.g. 'left' for ltr languages)

@mixin span-columns(
  $columns,
  $context       : $total-columns,
  $padding       : false,
  $from          : $from-direction
) {
  $to       : opposite-position($from);
  $pos      : split-columns-value($columns,position);
  $cols     : split-columns-value($columns,columns);
  $pad-from : relative-width(0 * $gutter-width, $context);
  $pad-to   : relative-width(0 * $gutter-width, $context);

  @if $padding != false {
    $pad-from : nth($padding, 1);

    @if length($padding) > 1 {
      $pad-to: nth($padding, 2);
    } @else {
      $pad-to: $pad-from;
    }

    $pad-from : relative-width($pad-from, $context);
    $pad-to   : relative-width($pad-to, $context);

    padding-#{$from}: $pad-from;
    padding-#{$to}: $pad-to;
  }

  width: columns($cols, $context) - if($border-box-sizing, 0, $pad-to + $pad-from);

  @if ($pos == 'omega') {
    @include omega($from);
  } @else {
    float: $from;
    margin-#{$to}: gutter($context);
    @if $legacy-support-for-ie6 {
      display: inline;
    }
  }
}

// Apply to elements spanning the last column, to account for the page edge.
// Only needed as an override. Normally 'omega' can just be called by `columns`.
//
// $from    : The start-direction for your document.
@mixin omega(
  $from     : $from-direction
) {
  $to     : opposite-position($from);
  $hack   : opposite-position($omega-float);

  float: $omega-float;
  margin-#{$to}: 0;

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    #margin-#{$hack}: - $gutter-width;
    @if $legacy-support-for-ie6 { display: inline; }
  }
}

// Shortcut to apply omega to a specific subset of elements.
//
// $n         : [first | only | last | <equation>]
// $selector  : [child | last-child | of-type | last-of-type ]
// $from      : The start-direction for your document.
@mixin nth-omega(
  $n        : last,
  $selector : child,
  $from     : $from-direction
) {
  $ie: if($n == "first", true, false);
  @include adjust-support-for($ie6: $ie, $ie7: $ie, $ie8: $ie) {
    &:#{format-nth($n,$selector)} { @include omega($from); }
  }
}

// ---------------------------------------------------------------------------
// Resets

// Reset a '+columns' grid element to default block behavior
//
// $from  : The start direction of your layout (e.g. 'left' for ltr languages)
@mixin reset-columns(
  $from: $from-direction
) {
  $to     : opposite-position($from);
  $hack   : opposite-position($omega-float);

  float: none;
  width: auto;
  margin-#{$to}: auto;

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    #margin-#{$hack}: auto;
    @if $legacy-support-for-ie6 { display: block; }
  }
}

// Apply to elements previously set as omega.
// This will return floats and margins back to non-omega settigns.
//
// $context : [optional] The context (columns spanned by parent).
// $from    : The start-direction for your document.
@mixin remove-omega(
  $context  : $total-columns,
  $from     : $from-direction
) {
  $to     : opposite-position($from);
  $hack   : opposite-position($omega-float);

  float: $from;
  margin-#{$to}: gutter($context);

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    #margin-#{$hack}: auto;
  }
}

// Shortcut to apply remove-omega to a specific subset of elements.
//
// $n         : [first | only | last | <equation>]
// $selector  : [child | last-child | of-type | last-of-type ]
// $context   : [optional] The context (columns spanned by parent).
// $from      : The start-direction for your document.
@mixin remove-nth-omega(
  $n        : last,
  $selector : child,
  $context  : $total-columns,
  $from     : $from-direction
) {
  $ie: if($n == "first", true, false);
  @include adjust-support-for($ie6: $ie, $ie7: $ie, $ie8: $ie) {
    &:#{format-nth($n,$selector)} { @include remove-omega($context,$from); }
  }
}

// ---------------------------------------------------------------------------
// Change Settings

@mixin with-grid-settings(
  $columns: $total-columns,
  $width: $column-width,
  $gutter: $gutter-width,
  $padding: $grid-padding
) {
  // keep the defaults around
  $default-columns: $total-columns;
  $default-width: $column-width;
  $default-gutter: $gutter-width;
  $default-padding: $grid-padding;

  // use the new settings
  $total-columns: $columns;
  $column-width: $width;
  $gutter-width: $gutter;
  $grid-padding: $padding;

  // apply to contents
  @content;

  // re-instate the defaults
  $total-columns: $default-columns;
  $column-width: $default-width;
  $gutter-width: $default-gutter;
  $grid-padding: $default-padding;
}
:@has_childrenT:@options{ :
@linei:@children["o:Sass::Tree::CommentNode
:
@type:silent;@;	i;
[ :@value["a/* ---------------------------------------------------------------------------
 * Imports */o:Sass::Tree::ImportNode;0:@imported_filename"'compass/utilities/general/clearfix;@;	i	;
[ :@imported_file0o;;0;"compass/css3/box-sizing;@;	i
;
[ ;0o;
;;;@;	i;
[ ;["k/* ---------------------------------------------------------------------------
 * Border-Box Sizing */o;
;;;@;	i;
[ ;["g/* Apply the border-box sizing model to all elements
 * and adjust the grid math appropriately. */o:Sass::Tree::MixinDefNode;T:
@args[ ;@;	i;
[o:Sass::Tree::VariableNode;@;	i;
[ :@guarded0:
@name"border-box-sizing:
@expro:Sass::Script::Bool;@;	i;To:Sass::Tree::RuleNode;T;@;	i:
@tabsi ;
[o:Sass::Tree::MixinNode;[o:Sass::Script::String	;:identifier;@;	i;"border-box;@;	i:@keywords{ ;
[ ;"box-sizing:@splat0:
@rule["*:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;	i:@members[o:Sass::Selector::Sequence;$[o:#Sass::Selector::SimpleSequence
;#@.;	i:@subject0:@sourceso:Set:
@hash{ ;$[o:Sass::Selector::Universal;#@.;	i:@namespace0;"border-box-sizing;0o;
;;;@;	i;
[ ;["c/* ---------------------------------------------------------------------------
 * Container */o;
;;;@;	i;
[ ;["d/* Set the width of a container
 *
 *  $columns  : The number of columns in the Grid Layout. */o;;T;[[o:Sass::Script::Variable:@underscored_name"columns;@;"columnso;-	;."total_columns;@;	i;"total-columns;@;	i;
[o;;@;	i;
[ ;0;"
width;o:Sass::Script::Funcall;[o;-	;."columns;@;	i;"columns;@;	i;{ ;"container-outer-width;0u:Sass::Tree::IfNodeÆ[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:string:@options{ :
@linei!:@value"static;
@;i!:@operand1o:Sass::Script::Variable	:@underscored_name"container_style;
@;i!:
@name"container-style:@operator:equ:Sass::Tree::IfNodeB[00[u:Sass::Tree::IfNode"[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:string:@options{ :
@linei$:@value"
fluid;
@;i$:@operand1o:Sass::Script::Variable	:@underscored_name"container_style;
@;i$:
@name"container-style:@operator:equ:Sass::Tree::IfNodeÑ[00[o:Sass::Tree::PropNode:@prop_syntax:new:@options{ :
@linei':
@tabsi :@children[ :
@name["max-width:@valueo:Sass::Script::Variable	:@underscored_name"
width;@;	i';"
widthu:Sass::Tree::IfNodeû[o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:@options{ :
@linei(:
@name"legacy-support-for-ie60[o:Sass::Tree::PropNode:@prop_syntax:new;@;i(:
@tabsi :@children[ ;	["_width:@valueo; 	;"
width;@;i(;	"
width[o:Sass::Tree::PropNode:@prop_syntax:new;
@;i%:
@tabsi :@children[ ;["
width;o:Sass::Script::Funcall:
@args[o; 
;o;	;;	;
@;i%;"%;
@;i%;o;;[o;	;"
width;
@;i%;"
width;
@;i%:@keywords{ ;"	unit:@splat0;;o;	;"
width;
@;i%;"
widtho;	;:identifier;
@;i%;"	auto;
@;i%;{ ;"if;0[o:Sass::Tree::PropNode:@prop_syntax:new;
@;i":
@tabsi :@children[ ;["
width;o;	;"
width;
@;i";"
width;"set-container-width;0o;
;;;@;	i-;
[ ;["o/* Set the outer grid-containing element(s).
 *
 *  $columns  : The number of columns in the container. */o;;T;[[o;-;."columns;@;"columnso;-	;."total_columns;@;	i1;"total-columns;@;	i2;
[	o;;[ ;@;	i3;{ ;
[ ;"pie-clearfix;0o;;[o;-	;."columns;@;	i4;"columns;@;	i4;{ ;
[ ;"set-container-width;0o:Sass::Tree::PropNode;T:@prop_syntax:new;@;	i5;i ;
[o;1;2;3;@;	i5;i ;
[ ;["	left;o;;;;@;"	autoo;1;2;3;@;	i5;i ;
[ ;["
right;o;;;;@;"	auto;["margin;o;;;;@;" o;1;T;2;3;@;	i6;i ;
[o;1;2;3;@;	i6;i ;
[ ;["	left;o;-	;."grid_padding;@;	i6;"grid-paddingo;1;2;3;@;	i6;i ;
[ ;["
right;o;-	;."grid_padding;@;	i6;"grid-padding;["padding;o;;;;@;" ;"apply-container;0o;
;;;@;	i9;
[ ;["¶/* Set one or more layouts on a grid-containing element at any number of media-query breakpoints.
 *
 * $media-layout-1        : [default:$total-columns] A list of values including -
 *                        : One unitless number (representing columns in a layout)
 *                        : Two optional lengths (representing min and max-width media-query breakpoints).
 * $media-layout-2 ...-10 : [optional] Same as $media-layout-1 */o;;T;[[o;-;."media_layout_1;@;"media-layout-1o;-	;."total_columns;@;	i@;"total-columns[o;-;."media_layout_2;@;"media-layout-2o;;@;	iA;F[o;-;."media_layout_3;@;"media-layout-3o;;@;	iB;F[o;-;."media_layout_4;@;"media-layout-4o;;@;	iC;F[o;-;."media_layout_5;@;"media-layout-5o;;@;	iD;F[o;-;."media_layout_6;@;"media-layout-6o;;@;	iE;F[o;-;."media_layout_7;@;"media-layout-7o;;@;	iF;F[o;-;."media_layout_8;@;"media-layout-8o;;@;	iG;F[o;-;."media_layout_9;@;"media-layout-9o;;@;	iH;F[o;-;."media_layout_10;@;"media-layout-10o;;@;	iI;F;@;	iJ;
[o;;@;	iK;
[ ;0;"media-layouts;o;/;[o;-	;."media_layout_2;@;	iK;"media-layout-2o;-	;."media_layout_3;@;	iK;"media-layout-3o;-	;."media_layout_4;@;	iK;"media-layout-4o;-	;."media_layout_5;@;	iK;"media-layout-5o;-	;."media_layout_6;@;	iK;"media-layout-6o;-	;."media_layout_7;@;	iK;"media-layout-7o;-	;."media_layout_8;@;	iK;"media-layout-8o;-	;."media_layout_9;@;	iK;"media-layout-9o;-	;."media_layout_10;@;	iK;"media-layout-10;@;	iK;{ ;"compact;0u;05[o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"media_layout_1:@options{ :
@lineiM:
@name"media-layout-1;	@
;
iM:@keywords{ ;"is-default-layout:@splat0u:Sass::Tree::IfNode[00[o:Sass::Tree::MixinNode:@has_childrenT:
@args[o:Sass::Script::Variable	:@underscored_name"media_layout_1:@options{ :
@lineiP:
@name"media-layout-1;
@;iP:@keywords{ :@children[o; ;[ ;
@;iQ;{ ;[ ;"apply-container:@splat0;"at-breakpoint;0[o:Sass::Tree::MixinNode;[ ;	@
;
iN;{ :@children[ ;"apply-container;0o:Sass::Tree::EachNode;T;@;	iU;
[u;0[o:Sass::Script::Variable	:@underscored_name"ml:@options{ :
@lineiV:
@name"ml0[o:Sass::Tree::MixinNode:@has_childrenT:
@args[o; 	;"ml;@;iW;	"ml;@;iW:@keywords{ :@children[o;
;[ ;@;iX;{ ;[ ;	"set-container-width:@splat0;	"at-breakpoint;0:	@var"ml:
@listo;-	;."media_layouts;@;	iU;"media-layouts;"container;0o;
;;;@;	i^;
[ ;["a/* ---------------------------------------------------------------------------
 * Columns */o;
;;;@;	ia;
[ ;["/* Create a grid element spanning any number of 'columns' in a grid 'context'.
 * $columns : The number of columns to span.
 * $context : [optional] The context (columns spanned by parent).
 *          : Context is required on any nested elements.
 *          : Context MUST NOT be declared on a root element.
 * $padding : [optional] Padding applied to the inside of individual grid columns.
 *          : Padding is only output if one or two values are specified (e.g. 1em or 10px 20px)
 *          : Padding values are applied only on the horizontal axis in from-to order
 * $from    : The start direction of your layout (e.g. 'left' for ltr languages) */o;;T;[	[o;-;."columns;@;"columns0[o;-;."context;@;"contexto;-	;."total_columns;@;	im;"total-columns[o;-;."padding;@;"paddingo;;@;	in;F[o;-;."	from;@;"	fromo;-	;."from_direction;@;	io;"from-direction;@;	ip;
[o;;@;	iq;
[ ;0;"to;o;/;[o;-	;."	from;@;	iq;"	from;@;	iq;{ ;"opposite-position;0o;;@;	ir;
[ ;0;"pos;o;/;[o;-	;."columns;@;	ir;"columnso;	;;;@;	ir;"position;@;	ir;{ ;"split-columns-value;0o;;@;	is;
[ ;0;"	cols;o;/;[o;-	;."columns;@;	is;"columnso;	;;;@;	is;"columns;@;	is;{ ;"split-columns-value;0o;;@;	it;
[ ;0;"pad-from;o;/;[o:Sass::Script::Operation
:@operand2o;-	;."gutter_width;@;	it;"gutter-width;@;	it:@operand1o:Sass::Script::Number:@original"0;@;	it:@denominator_units[ :@numerator_units[ ;i :@operator:
timeso;-	;."context;@;	it;"context;@;	it;{ ;"relative-width;0o;;@;	iu;
[ ;0;"pad-to;o;/;[o;7
;8o;-	;."gutter_width;@;	iu;"gutter-width;@;	iu;9o;:;;"0;@;	iu;<@H;=[ ;i ;>;?o;-	;."context;@;	iu;"context;@;	iu;{ ;"relative-width;0u;0Þ[o:Sass::Script::Operation
:@operand2o:Sass::Script::Bool:@options{ :
@lineiw:@valueF;@;	iw:@operand1o:Sass::Script::Variable	:@underscored_name"padding;@;	iw:
@name"padding:@operator:neq0[o:Sass::Tree::VariableNode;@;	ix:@children[ :@guarded0;"pad-from:
@expro:Sass::Script::Funcall:
@args[o;	;"padding;@;	ix;"paddingo:Sass::Script::Number:@original"1;@;	ix:@denominator_units[ :@numerator_units[ ;
i;@;	ix:@keywords{ ;"nth:@splat0u:Sass::Tree::IfNodeÈ[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@original"1:@options{ :
@lineiz:@denominator_units[ :@numerator_units[ :@valuei;	@	;
iz:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"padding;	@	;
iz:
@name"padding;	@	;
iz:@keywords{ ;"length:@splat0:@operator:gtu:Sass::Tree::IfNode²[00[o:Sass::Tree::VariableNode:@options{ :
@linei}:@children[ :@guarded0:
@name"pad-to:
@expro:Sass::Script::Variable	:@underscored_name"pad_from;@;i};
"pad-from[o:Sass::Tree::VariableNode;	@	;
i{:@children[ :@guarded0;"pad-to:
@expro;;[o;	;"padding;	@	;
i{;"paddingo;;"2;	@	;
i{;@
;[ ;i;	@	;
i{;{ ;"nth;0o;;@;	i{;[ ;0;"pad-from;o;;[o;	;"pad_from;@;	i{;"pad-fromo;	;"context;@;	i{;"context;@;	i{;{ ;"relative-width;0o;;@;	i|;[ ;0;"pad-to;o;;[o;	;"pad_to;@;	i|;"pad-too;	;"context;@;	i|;"context;@;	i|;{ ;"relative-width;0o:Sass::Tree::PropNode:@prop_syntax:new;@;	i~:
@tabsi ;[ ;["padding-o;	;"	from;@;	i~;"	from;
o;	;"pad_from;@;	i~;"pad-fromo;;; ;@;	i;!i ;[ ;["padding-o;	;"to;@;	i;"to;
o;	;"pad_to;@;	i;"pad-too;1;2;3;@;	i;i ;
[ ;["
width;o;7
;8o;/;[o;-	;."border_box_sizing;@;	i;"border-box-sizingo;:;;"0;@;	i;<@H;=[ ;i o;7
;8o;-	;."pad_from;@;	i;"pad-from;@;	i;9o;-	;."pad_to;@;	i;"pad-to;>:	plus;@;	i;{ ;"if;0;@;	i;9o;/;[o;-	;."	cols;@;	i;"	colso;-	;."context;@;	i;"context;@;	i;{ ;"columns;0;>:
minusu;0	[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:string:@options{ :
@linei:@value"
omega;
@;i:@operand1o:Sass::Script::Variable	:@underscored_name"pos;
@;i:
@name"pos:@operator:equ:Sass::Tree::IfNode[00[o:Sass::Tree::PropNode:@prop_syntax:new:@options{ :
@linei:
@tabsi :@children[ :
@name["
float:@valueo:Sass::Script::Variable	:@underscored_name"	from;@;	i;"	fromo; ;;;@;	i;
i ;[ ;["margin-o;	;"to;@;	i;"to;o:Sass::Script::Funcall:
@args[o;	;"context;@;	i;"context;@;	i:@keywords{ ;"gutter:@splat0u:Sass::Tree::IfNode[o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:@options{ :
@linei:
@name"legacy-support-for-ie60[o:Sass::Tree::PropNode:@prop_syntax:new;@;i:
@tabsi :@children[ ;	["display:@valueo:Sass::Script::String:
@type:identifier;@;"inline[o:Sass::Tree::MixinNode:
@args[o;	;"	from;
@;i;"	from;
@;i:@keywords{ :@children[ ;"
omega:@splat0;"span-columns;0o;
;;;@;	i;
[ ;["Ø/* Apply to elements spanning the last column, to account for the page edge.
 * Only needed as an override. Normally 'omega' can just be called by `columns`.
 *
 * $from    : The start-direction for your document. */o;;T;[[o;-;."	from;@;"	fromo;-	;."from_direction;@;	i;"from-direction;@;	i;
[
o;;@;	i;
[ ;0;"to;o;/;[o;-	;."	from;@;	i;"	from;@;	i;{ ;"opposite-position;0o;;@;	i;
[ ;0;"	hack;o;/;[o;-	;."omega_float;@;	i;"omega-float;@;	i;{ ;"opposite-position;0o;1;2;3;@;	i;i ;
[ ;["
float;o;-	;."omega_float;@;	i;"omega-floato;1;2;3;@;	i;i ;
[ ;["margin-o;-	;."to;@;	i;"to;o;;;;@;"0u;0"[o:Sass::Script::Operation
:@operand2o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie7:@options{ :
@linei:
@name"legacy-support-for-ie7;	@	;
i:@operand1o;	;"legacy_support_for_ie6;	@	;
i;"legacy-support-for-ie6:@operator:or0[o:Sass::Tree::PropNode:@prop_syntax:new;	@	;
i:
@tabsi :@children[ ;["#margin-o;	;"	hack;	@	;
i;"	hack:@valueo:!Sass::Script::UnaryOperation	;	@	;
i;:
minus:@operando;	;"gutter_width;	@	;
i;"gutter-widthu:Sass::Tree::IfNode[o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:@options{ :
@linei:
@name"legacy-support-for-ie60[o:Sass::Tree::PropNode:@prop_syntax:new;@;i:
@tabsi :@children[ ;	["display:@valueo:Sass::Script::String:
@type:identifier;@;"inline;"
omega;0o;
;;;@;	i¢;
[ ;["ë/* Shortcut to apply omega to a specific subset of elements.
 *
 * $n         : [first | only | last | <equation>]
 * $selector  : [child | last-child | of-type | last-of-type ]
 * $from      : The start-direction for your document. */o;;T;[[o;-;."n;@;"no;	;;;@;	i¨;"	last[o;-;."selector;@;"selectoro;	;;;@;	i©;"
child[o;-;."	from;@;"	fromo;-	;."from_direction;@;	iª;"from-direction;@;	i«;
[o;;@;	i¬;
[ ;0;"ie;o;/;[o;7
;8o;	;:string;@;	i¬;"
first;@;	i¬;9o;-	;."n;@;	i¬;"n;>:eqo;;@;	i¬;To;;@;	i¬;F;@;	i¬;{ ;"if;0o;;T;[ ;@;	i­;{"ie7o;-	;."ie;@;	i­;"ie"ie8o;-	;."ie;@;	i­;"ie"ie6o;-	;."ie;@;	i­;"ie;
[o;;T;@;	i®;i ;
[o;;[o;-	;."	from;@;	i®;"	from;@;	i®;{ ;
[ ;"
omega;0; ["&:o;/;[o;-	;."n;@;	i®;"no;-	;."selector;@;	i®;"selector;@;	i®;{ ;"format-nth;0;"adjust-support-for;0;"nth-omega;0o;
;;;@;	i²;
[ ;["`/* ---------------------------------------------------------------------------
 * Resets */o;
;;;@;	iµ;
[ ;["/* Reset a '+columns' grid element to default block behavior
 *
 * $from  : The start direction of your layout (e.g. 'left' for ltr languages) */o;;T;[[o;-;."	from;@;"	fromo;-	;."from_direction;@;	i¹;"from-direction;@;	iº;
[o;;@;	i»;
[ ;0;"to;o;/;[o;-	;."	from;@;	i»;"	from;@;	i»;{ ;"opposite-position;0o;;@;	i¼;
[ ;0;"	hack;o;/;[o;-	;."omega_float;@;	i¼;"omega-float;@;	i¼;{ ;"opposite-position;0o;1;2;3;@;	i¾;i ;
[ ;["
float;o;;;;@;"	noneo;1;2;3;@;	i¿;i ;
[ ;["
width;o;;;;@;"	autoo;1;2;3;@;	iÀ;i ;
[ ;["margin-o;-	;."to;@;	iÀ;"to;o;;;;@;"	autou;0ï[o:Sass::Script::Operation
:@operand2o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie7:@options{ :
@lineiÂ:
@name"legacy-support-for-ie7;	@	;
iÂ:@operand1o;	;"legacy_support_for_ie6;	@	;
iÂ;"legacy-support-for-ie6:@operator:or0[o:Sass::Tree::PropNode:@prop_syntax:new;	@	;
iÃ:
@tabsi :@children[ ;["#margin-o;	;"	hack;	@	;
iÃ;"	hack:@valueo:Sass::Script::String:
@type:identifier;	@	;"	autou:Sass::Tree::IfNode[o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:@options{ :
@lineiÄ:
@name"legacy-support-for-ie60[o:Sass::Tree::PropNode:@prop_syntax:new;@;iÄ:
@tabsi :@children[ ;	["display:@valueo:Sass::Script::String:
@type:identifier;@;"
block;"reset-columns;0o;
;;;@;	iÈ;
[ ;["í/* Apply to elements previously set as omega.
 * This will return floats and margins back to non-omega settigns.
 *
 * $context : [optional] The context (columns spanned by parent).
 * $from    : The start-direction for your document. */o;;T;[[o;-;."context;@;"contexto;-	;."total_columns;@;	iÎ;"total-columns[o;-;."	from;@;"	fromo;-	;."from_direction;@;	iÏ;"from-direction;@;	iÐ;
[
o;;@;	iÑ;
[ ;0;"to;o;/;[o;-	;."	from;@;	iÑ;"	from;@;	iÑ;{ ;"opposite-position;0o;;@;	iÒ;
[ ;0;"	hack;o;/;[o;-	;."omega_float;@;	iÒ;"omega-float;@;	iÒ;{ ;"opposite-position;0o;1;2;3;@;	iÔ;i ;
[ ;["
float;o;-	;."	from;@;	iÔ;"	fromo;1;2;3;@;	iÕ;i ;
[ ;["margin-o;-	;."to;@;	iÕ;"to;o;/;[o;-	;."context;@;	iÕ;"context;@;	iÕ;{ ;"gutter;0u;0¿[o:Sass::Script::Operation
:@operand2o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie7:@options{ :
@linei×:
@name"legacy-support-for-ie7;	@	;
i×:@operand1o;	;"legacy_support_for_ie6;	@	;
i×;"legacy-support-for-ie6:@operator:or0[o:Sass::Tree::PropNode:@prop_syntax:new;	@	;
iØ:
@tabsi :@children[ ;["#margin-o;	;"	hack;	@	;
iØ;"	hack:@valueo:Sass::Script::String:
@type:identifier;	@	;"	auto;"remove-omega;0o;
;;;@;	iÜ;
[ ;["6/* Shortcut to apply remove-omega to a specific subset of elements.
 *
 * $n         : [first | only | last | <equation>]
 * $selector  : [child | last-child | of-type | last-of-type ]
 * $context   : [optional] The context (columns spanned by parent).
 * $from      : The start-direction for your document. */o;;T;[	[o;-;."n;@;"no;	;;;@;	iã;"	last[o;-;."selector;@;"selectoro;	;;;@;	iä;"
child[o;-;."context;@;"contexto;-	;."total_columns;@;	iå;"total-columns[o;-;."	from;@;"	fromo;-	;."from_direction;@;	iæ;"from-direction;@;	iç;
[o;;@;	iè;
[ ;0;"ie;o;/;[o;7
;8o;	;;B;@;	iè;"
first;@;	iè;9o;-	;."n;@;	iè;"n;>;Co;;@;	iè;To;;@;	iè;F;@;	iè;{ ;"if;0o;;T;[ ;@;	ié;{"ie7o;-	;."ie;@;	ié;"ie"ie8o;-	;."ie;@;	ié;"ie"ie6o;-	;."ie;@;	ié;"ie;
[o;;T;@;	iê;i ;
[o;;[o;-	;."context;@;	iê;"contexto;-	;."	from;@;	iê;"	from;@;	iê;{ ;
[ ;"remove-omega;0; ["&:o;/;[o;-	;."n;@;	iê;"no;-	;."selector;@;	iê;"selector;@;	iê;{ ;"format-nth;0;"adjust-support-for;0;"remove-nth-omega;0o;
;;;@;	iî;
[ ;["i/* ---------------------------------------------------------------------------
 * Change Settings */o;;T;[	[o;-;."columns;@;"columnso;-	;."total_columns;@;	iò;"total-columns[o;-;."
width;@;"
widtho;-	;."column_width;@;	ió;"column-width[o;-;."gutter;@;"guttero;-	;."gutter_width;@;	iô;"gutter-width[o;-;."padding;@;"paddingo;-	;."grid_padding;@;	iõ;"grid-padding;@;	iö;
[o;
;;;@;	i÷;
[ ;["#/* keep the defaults around */o;;@;	iø;
[ ;0;"default-columns;o;-	;."total_columns;@;	iø;"total-columnso;;@;	iù;
[ ;0;"default-width;o;-	;."column_width;@;	iù;"column-widtho;;@;	iú;
[ ;0;"default-gutter;o;-	;."gutter_width;@;	iú;"gutter-widtho;;@;	iû;
[ ;0;"default-padding;o;-	;."grid_padding;@;	iû;"grid-paddingo;
;;;@;	iý;
[ ;["/* use the new settings */o;;@;	iþ;
[ ;0;"total-columns;o;-	;."columns;@;	iþ;"columnso;;@;	iÿ;
[ ;0;"column-width;o;-	;."
width;@;	iÿ;"
widtho;;@;	i ;
[ ;0;"gutter-width;o;-	;."gutter;@;	i ;"guttero;;@;	i;
[ ;0;"grid-padding;o;-	;."padding;@;	i;"paddingo;
;;;@;	i;
[ ;["/* apply to contents */o:Sass::Tree::ContentNode;@;	i;
[ o;
;;;@;	i;
[ ;[""/* re-instate the defaults */o;;@;	i;
[ ;0;"total-columns;o;-	;."default_columns;@;	i;"default-columnso;;@;	i;
[ ;0;"column-width;o;-	;."default_width;@;	i;"default-widtho;;@;	i	;
[ ;0;"gutter-width;o;-	;."default_gutter;@;	i	;"default-guttero;;@;	i
;
[ ;0;"grid-padding;o;-	;."default_padding;@;	i
;"default-padding;"with-grid-settings;0